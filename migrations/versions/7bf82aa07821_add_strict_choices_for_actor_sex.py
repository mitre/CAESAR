"""add strict choices for actor sex

Revision ID: 7bf82aa07821
Revises: a04ef88c7c1a
Create Date: 2024-05-20 22:26:24.210217

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '7bf82aa07821'
down_revision = 'a04ef88c7c1a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('actor', schema=None) as batch_op:
        # Add new sex choices so we can convert existing records
        sex_choices = postgresql.ENUM('Male', 'Female', 'Man', 'Woman', 'Unknown', 'Non_Binary', 'Transgender_Man', 'Transgender_Woman', name='sex_choices')
        sex_choices.create(op.get_bind())
        op.execute("""ALTER TABLE actor ALTER COLUMN sex TYPE sex_choices USING sex::text::sex_choices""")

        # Change any existing actor sex to Man if it's male and Woman if Female
        op.execute("""UPDATE actor SET sex = 'Man' WHERE sex = 'Male'""")
        op.execute("""UPDATE actor SET sex = 'Woman' WHERE sex = 'Female'""")

        # Update enum to get rid of the old sex values
        sex_choices = postgresql.ENUM('Man', 'Woman', 'Unknown', 'Non_Binary', 'Transgender_Man', 'Transgender_Woman', name='sex_choices')
        sex_choices.create(op.get_bind())
        op.execute("""ALTER TABLE actor ALTER COLUMN sex TYPE sex_choices USING sex::text::sex_choices""")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('actor', schema=None) as batch_op:
        op.execute("""ALTER TABLE actor ALTER COLUMN sex TYPE VARCHAR""")
        op.execute("""UPDATE actor SET sex = 'Male' WHERE sex = 'Man'""")
        op.execute("""UPDATE actor SET sex = 'Female' WHERE sex = 'Woman'""")
        op.execute("""DROP TYPE sex_choices""")

    # ### end Alembic commands ###
