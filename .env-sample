# Bayanat
FLASK_APP=run.py
# must be always set to 0 in production deployments
FLASK_DEBUG=0

# Set to 'dev' to enable SwaggerUI
ENV=prod

# should leave as default
POSTGRES_DB=bayanat

# Uncomment the following lines if you're deploying with Docker
# or need to supply these information, e.g. postgres or redis are
# installed on a separate host or require authentication.
# Otherwise you can leave commented.

# should leave as default
POSTGRES_USER=postgres
# generate secure password and setup psql accordinngly 
POSTGRES_PASSWORD=change-me
# use 'postgres' for docker, otherwise add ip/domain name
POSTGRES_HOST=postgres
# use 'redis' for docker, or ip/domain name
REDIS_HOST=redis
# generate secure password and setup redis accordinngly 
REDIS_PASSWORD=change-me
# REDIS_AOF_ENABLED=no 
# Set `MEDIA_PATH` if running locally (not in Docker) and you want to change
# where the media files are stored
# MEDIA_PATH=

# Secrets
# generate using 'openssl rand -base64 32'
SECRET_KEY=change-me
# generate using 'openssl rand -base64 32'
SECURITY_PASSWORD_SALT=change-me

# 2FA
# generate using 'openssl rand -base64 32'
SECURITY_TOTP_SECRETS=change-me
SECURITY_TWO_FACTOR_REQUIRED=True
SECURITY_TWO_FACTOR_RESCUE_MAIL=''
SECURITY_TWO_FACTOR_AUTHENTICATOR_VALIDITY=90

# Uncomment the next line to force users to use OAuth login (make sure you have set an admin with oauth credentials before this)
# SECURITY_LOGIN_URL=/auth

# Oauth
OAUTH_ENABLE=False
OAUTH_CLIENT_ID=''
OAUTH_CLIENT_SECRET=''
OAUTH_DISCOVERY_URL=''
# Uncomment and set to `1` when developing with OAuth and not using https
# OAUTHLIB_INSECURE_TRANSPORT=0

# Feedback Forms - Set to display a link on the homepage for a new feature form and a bug reporting form
# FEATURE_FORM=#linkgoeshere
# BUG_FORM=#linkgoeshere

# S3
AWS_ACCESS_KEY_ID=''
AWS_SECRET_ACCESS_KEY=''
S3_BUCKET=''
AWS_REGION='us-east-1'

# Recaptcha
RECAPTCHA_ENABLED=False
RECAPTCHA_PUBLIC_KEY=''
RECAPTCHA_PRIVATE_KEY=''

FILESYSTEM_LOCAL=True
ETL_TOOL=True
ETL_PATH_IMPORT=False
SHEET_IMPORT=True
MISSING_PERSONS=False

# MAPS
## Openstreetmaps raster tile server
MAPS_API_ENDPOINT='https://tile.openstreetmap.org/{z}/{x}/{y}.png'

## Where to center the map by default
GEO_MAP_DEFAULT_CENTER_LAT=49.48240137826932
GEO_MAP_DEFAULT_CENTER_LNG=31.261596679687504

## Google Maps API
GOOGLE_MAPS_API_KEY=''

# Deduplication
DEDUP_TOOL=False
DEDUP_LOW_DISTANCE=0.3
DEDUP_MAX_DISTANCE=0.5
DEDUP_BATCH_SIZE=30

# The name of a file in the ./enferno/data directory that contains location data to preload to bayanat on startup
LOCATIONS_FILENAME=ukraine_locations.csv

# Secure cookies
## Requires SSL to work properly
## Should be set to true in prod environments
## Can be switched off in dev environments
SECURE_COOKIES=True

# Language Settings
## Comma-separated list of Languages to support
LANGUAGES=en,ar,uk
## Enable language selector in the nav bar
LANG_BUTTONS_ENABLE=true

# Admin user to create if one does not already exist
ADMIN_USERNAME=admin
ADMIN_PASSWORD=change-me

# Enable the Export Tool
EXPORT_TOOL=True

# Enable Zotero Imports
# ZOTERO_IMPORT=True

# Change the maximum file size for uploads (Default: 100000MB)
MEDIA_UPLOAD_MAX_FILE_SIZE=100000

# Docker Compose
# EXTERNAL_PORTs specify to what port on the host a service running in a docker container should be mapped
BAYANAT_EXTERNAL_PORT=5000
BAYANAT_IMPORT_PATH=./enferno/imports
BAYANAT_LOGS_PATH=./logs
BAYANAT_MEDIA_PATH=./enferno/media
BAYANAT_EXPORTS_PATH=./enferno/exports
POSTGRES_EXTERNAL_PORT=5432
REDIS_EXTERNAL_PORT=6379
REGISTRY=artifacts.mitre.org:8200
## Leave `DB_DATA` and `DB_BACKUP` commented to use a virtual volume for PostgreSQL
## data and backup, otherwise set to the paths they should be stored
#DB_DATA=./db/data
#DB_BACKUP=./db/backup
## Set USER_ID and GROUP_ID to match the uid and gid for the user that owns 
## the CAESAR files. CAESAR will still run if you don't set this, but you will 
## not be able to change the configs from the UI as the `config.json` file will
## not be writable
USER_ID=1000
GROUP_ID=1000