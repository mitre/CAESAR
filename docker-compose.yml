version: '3'

services:
  postgres:
    image: postgis/postgis:15-3.3
    env_file:
      - ${ENV_FILE:-.env}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bayanat}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-me}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/opt/backup
    ports:
      - ${POSTGRES_EXTERNAL_PORT:-5432}:5432
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /var/run/postgresql
    healthcheck:
      test: "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
      interval: 3s
      retries: 10

  redis:
    image: 'redis:latest'
    ports:
      - ${REDIS_EXTERNAL_PORT:-6379}:6379
    command: redis-server --requirepass '${REDIS_PASSWORD:-change-me}'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-change-me}
    security_opt:
      - no-new-privileges:true
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-change-me}", "ping" ]
      interval: 3s
      retries: 10

  bayanat:
    image: ${REGISTRY}/caesar/bayanat:${CI_COMMIT_SHA:-latest}
    build:
      context: .
      dockerfile: ./flask/Dockerfile
      args:
        ROLE: flask
    configs:
      - source: dotenv
        target: /app/.env
    env_file: .env
    environment:
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-change-me}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-bayanat}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-me}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - ${BAYANAT_IMPORT_PATH:-./enferno/imports}:/app/enferno/imports:rw
      - ${BAYANAT_LOGS_PATH:-./logs}:/app/logs:rw
      - ${BAYANAT_MEDIA_PATH:-./enferno/media}:/app/enferno/media:rw
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true
    ports:
      - ${BAYANAT_EXTERNAL_PORT:-5000}:5000

  celery:
    image: ${REGISTRY}/caesar/celery:${CI_COMMIT_SHA:-latest}
    build:
      context: .
      dockerfile: ./flask/Dockerfile
      args:
        ROLE: celery
    configs:
      - source: dotenv
        target: /app/.env
    environment:
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-change-me}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-bayanat}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-me}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - ${BAYANAT_IMPORT_PATH:-./enferno/imports}:/app/enferno/imports:rw
      - ${BAYANAT_LOGS_PATH:-./logs}:/app/logs:rw
      - ${BAYANAT_MEDIA_PATH:-./enferno/media}:/app/enferno/media:rw
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true

configs:
  dotenv:
    file: ./.env
    name: "dotenv_${DEPLOY_ENV:-dev}_${SETTINGS_TIMESTAMP:-1111111111}"

volumes:
  postgres_backup:
  postgres_data:
  redis_data:
